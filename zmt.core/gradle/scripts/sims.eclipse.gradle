/*
 * Generic script for simulations based on zmt.core
 * Can be embedded in build.gradle using
 *      apply from: 'zmt.core/gradle/scripts/sims.eclipse.gradle'
 * 
 * With this script a launch configuration will be generated to launch the
 * simulation in eclipse via launcher.
 */

// need to have dependencies and stuff evaluated
afterEvaluate {
    // also generate eclipse files in dependencies
    configurations.compile.dependencies.withType(ProjectDependency).each {
        // need to evaluate dependencies first
        evaluationDependsOn(it.dependencyProject.path)
        if (it.dependencyProject.plugins.hasPlugin('eclipse')) {
            tasks.eclipse.dependsOn(it.dependencyProject.tasks.eclipse)
            tasks.cleanEclipse.dependsOn(
                    it.dependencyProject.tasks.cleanEclipse)
        }
    }
    // ... and for launcher
    tasks.eclipse.dependsOn(':zmt.launcher:eclipse')
    tasks.cleanEclipse.dependsOn(':zmt.launcher:cleanEclipse')

    /* add runtime dependency for this project in launcher 
    to make it executable in eclipse */
    project(':zmt.launcher').afterEvaluate {
        project(':zmt.launcher').dependencies {
            runtime(project) {
                transitive = false
            }
        }
    }
}

def upperCaseName = name.substring(0, 1).toUpperCase()
upperCaseName += name.substring(1)
def launchConfigFileName = "Run${upperCaseName}WithUI.launch"
println launchConfigFileName

tasks.eclipse.doLast {
    def launchConfig = new File(launchConfigFileName)
    // eclipse generated launch configuration with project name in it
    launchConfig.text = """<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
<launchConfiguration type=\"org.eclipse.jdt.launching.localJavaApplication\">
<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">
<listEntry value=\"/zmt.launcher/src/main/java/de/zmt/Main.java\"/>
</listAttribute>
<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_TYPES\">
<listEntry value=\"1\"/>
</listAttribute>
<stringAttribute key=\"org.eclipse.jdt.launching.MAIN_TYPE\" value=\"de.zmt.Main\"/>
<stringAttribute key=\"org.eclipse.jdt.launching.PROGRAM_ARGUMENTS\" value=\"$project.name gui\"/>
<stringAttribute key=\"org.eclipse.jdt.launching.PROJECT_ATTR\" value=\"zmt.launcher\"/>
<stringAttribute key=\"org.eclipse.jdt.launching.WORKING_DIRECTORY\" value=\"\${workspace_loc:$project.name}\"/>
</launchConfiguration>"""
}

// delete launch configuration
tasks.cleanEclipse.doLast {
    new File(launchConfigFileName).delete()
}
