/*
 * Generic script for ssh configuration for deploying to 'dochost'
 * Can be embedded in build.gradle using
 *      apply from: 'zmt.core/gradle/scripts/deploy.configuration.gradle'
 * 
 * With this script a task 'determineCredentials' is added to the project
 * that asks the user to enter login credentials.
 */
 
import groovy.swing.*

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:1.+'
        classpath 'nu.studer:gradle-credentials-plugin:1.+'
    }
}

// https://discuss.gradle.org/t/plugin-not-found-when-i-using-a-gradle-from-other-gradle-file/5628
apply plugin: org.hidetake.gradle.ssh.plugin.SshPlugin
apply plugin: nu.studer.gradle.credentials.CredentialsPlugin

remotes {
    dochost {
        host = 'dochost'
        knownHosts = allowAnyHosts
        user = credentials.dochostUser
        password = credentials.dochostPw
        // webserver directory
    }
}

task determineCredentials {
    description = 'Ask user to enter credentials.'
    ext.wwwPath = '/var/www/dochost/'
    onlyIf { !remotes.dochost.user || !remotes.dochost.password }
}

determineCredentials.doLast {
    def console = System.console()
    // we can access console: ask for username / password
    if (console) {
        console.printf("\nEnter username: ")
        remotes.dochost.user = console.readLine()
        console.printf("\nEnter password: ")
        // readPassword() returns char array, wrap it into string
        remotes.dochost.password = new String(console.readPassword())
    }
    // no console: create dialog and get it from there
    else {
        // https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
        new SwingBuilder().edt {
            dialog(
                modal: true, // Otherwise the build will continue running before you closed the dialog
                title: 'Connecting...', // Dialog title
                alwaysOnTop: true, // pretty much what the name says
                resizable: false, // Don't allow the user to resize the dialog
                locationRelativeTo: null, // Place dialog in center of the screen
                pack: true, // We need to pack the dialog (so it will take the size of it's children)
                show: true // Let's show it
            ) {
                vbox {
                    label(text: "username: ")
                    userInput = textField(text: System.getProperty("user.name"))
                    userInput.selectAll()
                    label(text: "password: ")
                    pwInput = passwordField()
                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        remotes.dochost.user = userInput.text
                        remotes.dochost.password = pwInput.text
                        dispose() // Close dialog
                    })
                }
            }
        }
    }
    
    println "Use task 'addCredentials' with keys 'dochostUser' and 'dochostPw' if you want to store credentials permanently."
}
